/*
 * Clever API
 * The Clever API
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.StudentRelationship;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Contact
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-10-25T09:14:56.929Z")
public class Contact {
  @SerializedName("legacy_id")
  private String legacyId = null;

  @SerializedName("phone")
  private String phone = null;

  /**
   * Gets or Sets phoneType
   */
  @JsonAdapter(PhoneTypeEnum.Adapter.class)
  public enum PhoneTypeEnum {
    CELL("Cell"),
    
    HOME("Home"),
    
    WORK("Work"),
    
    OTHER("Other"),
    
    EMPTY("");

    private String value;

    PhoneTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PhoneTypeEnum fromValue(String text) {
      for (PhoneTypeEnum b : PhoneTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PhoneTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PhoneTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PhoneTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PhoneTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("phone_type")
  private PhoneTypeEnum phoneType = null;

  @SerializedName("sis_id")
  private String sisId = null;

  @SerializedName("student_relationships")
  private List<StudentRelationship> studentRelationships = null;

  public Contact legacyId(String legacyId) {
    this.legacyId = legacyId;
    return this;
  }

   /**
   * Get legacyId
   * @return legacyId
  **/
  @ApiModelProperty(value = "")
  public String getLegacyId() {
    return legacyId;
  }

  public void setLegacyId(String legacyId) {
    this.legacyId = legacyId;
  }

  public Contact phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @ApiModelProperty(value = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public Contact phoneType(PhoneTypeEnum phoneType) {
    this.phoneType = phoneType;
    return this;
  }

   /**
   * Get phoneType
   * @return phoneType
  **/
  @ApiModelProperty(value = "")
  public PhoneTypeEnum getPhoneType() {
    return phoneType;
  }

  public void setPhoneType(PhoneTypeEnum phoneType) {
    this.phoneType = phoneType;
  }

  public Contact sisId(String sisId) {
    this.sisId = sisId;
    return this;
  }

   /**
   * Get sisId
   * @return sisId
  **/
  @ApiModelProperty(value = "")
  public String getSisId() {
    return sisId;
  }

  public void setSisId(String sisId) {
    this.sisId = sisId;
  }

  public Contact studentRelationships(List<StudentRelationship> studentRelationships) {
    this.studentRelationships = studentRelationships;
    return this;
  }

  public Contact addStudentRelationshipsItem(StudentRelationship studentRelationshipsItem) {
    if (this.studentRelationships == null) {
      this.studentRelationships = new ArrayList<StudentRelationship>();
    }
    this.studentRelationships.add(studentRelationshipsItem);
    return this;
  }

   /**
   * Get studentRelationships
   * @return studentRelationships
  **/
  @ApiModelProperty(value = "")
  public List<StudentRelationship> getStudentRelationships() {
    return studentRelationships;
  }

  public void setStudentRelationships(List<StudentRelationship> studentRelationships) {
    this.studentRelationships = studentRelationships;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contact contact = (Contact) o;
    return Objects.equals(this.legacyId, contact.legacyId) &&
        Objects.equals(this.phone, contact.phone) &&
        Objects.equals(this.phoneType, contact.phoneType) &&
        Objects.equals(this.sisId, contact.sisId) &&
        Objects.equals(this.studentRelationships, contact.studentRelationships);
  }

  @Override
  public int hashCode() {
    return Objects.hash(legacyId, phone, phoneType, sisId, studentRelationships);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contact {\n");
    
    sb.append("    legacyId: ").append(toIndentedString(legacyId)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneType: ").append(toIndentedString(phoneType)).append("\n");
    sb.append("    sisId: ").append(toIndentedString(sisId)).append("\n");
    sb.append("    studentRelationships: ").append(toIndentedString(studentRelationships)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

